{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/layout/css-modules/header.module.css","webpack:///./src/components/layout/header.js","webpack:///./src/components/layout/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Index","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout_layout__WEBPACK_IMPORTED_MODULE_2__","_ref","posts","data","allMarkdownRemark","edges","a","createElement","className","filter","post","node","frontmatter","title","length","map","_ref2","key","id","to","path","date","excerpt","module","exports","container","heading","Header","siteTitle","react_default","headerStyles","gatsby_browser_entry","propTypes","PropTypes","string","defaultProps","Layout","children","query","render","header","site","siteMetadata","_755544856","isRequired"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,8BAAAG,IAAA,IAAAC,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,IAAAU,EAAAV,EAAA,KAAAA,EAAA,KAMe,SAASI,EAATO,GAAwB,IACtBC,EADsBD,EAAPE,KACAC,kBAAtBC,MACR,OACER,EAAAS,EAAAC,cAACP,EAAA,EAAD,KACEH,EAAAS,EAAAC,cAAA,OAAKC,UAAU,qBACbX,EAAAS,EAAAC,cAAA,WACEV,EAAAS,EAAAC,cAAA,gFACAV,EAAAS,EAAAC,cAAA,oEAEFV,EAAAS,EAAAC,cAAA,OAAKC,UAAU,cACZN,EACEO,OAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYC,MAAMC,OAAS,IACpDC,IAAI,SAAAC,GAAoB,IAAXN,EAAWM,EAAjBL,KACN,OACEd,EAAAS,EAAAC,cAAA,OAAKC,UAAU,oBAAoBS,IAAKP,EAAKQ,IAC3CrB,EAAAS,EAAAC,cAAA,UACEV,EAAAS,EAAAC,cAACR,EAAA,KAAD,CAAMoB,GAAIT,EAAKE,YAAYQ,MAAOV,EAAKE,YAAYC,QAErDhB,EAAAS,EAAAC,cAAA,KAAGC,UAAU,QAAQE,EAAKE,YAAYS,MACtCxB,EAAAS,EAAAC,cAAA,SAAIG,EAAKY,eAUpB,IAAM3B,EAAS,sHClCtB4B,EAAAC,QAAA,CAAkBC,UAAA,kCAAAC,QAAA,gKCKZC,EAAS,SAAA1B,GAAA,IAAG2B,EAAH3B,EAAG2B,UAAH,OACbC,EAAAvB,EAAAC,cAAA,UAAQC,UAAWsB,IAAaL,WAC9BI,EAAAvB,EAAAC,cAAA,MAAIC,UAAWsB,IAAaJ,SAC1BG,EAAAvB,EAAAC,cAACwB,EAAA,KAAD,CAAMZ,GAAG,KACNS,MAMTD,EAAOK,UAAY,CACjBJ,UAAWK,IAAUC,QAGvBP,EAAOQ,aAAe,CACpBP,UAAS,IAGID,QCjBTS,UAAS,SAAAnC,GAAA,IAAGoC,EAAHpC,EAAGoC,SAAH,OACbR,EAAAvB,EAAAC,cAACwB,EAAA,YAAD,CACEO,MAAK,YASLC,OAAQ,SAAApC,GAAI,OACV0B,EAAAvB,EAAAC,cAAA,OAAKC,UAAU,oBACbqB,EAAAvB,EAAAC,cAACiC,EAAD,CAAQZ,UAAWzB,EAAKsC,KAAKC,aAAa7B,QAC1CgB,EAAAvB,EAAAC,cAAA,YACG8B,KAdTlC,KAAAwC,MAqBFP,EAAOJ,UAAY,CACjBK,SAAUJ,IAAUtB,KAAKiC,YAGZR","file":"component---src-pages-index-js-9acc6a2b038e1537a259.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport Layout from '../components/layout/layout'\nimport '../assets/styles/index.css'\n\nexport default function Index({ data }){\n  const { edges: posts } = data.allMarkdownRemark;\n  return (\n    <Layout>\n      <div className=\"landing-container\">\n        <div>\n          <h2>Hi, I'm Alexandra. A self-taught front end developer from Norwich.</h2>\n          <p>My passions are design, development and accessibility.</p>\n        </div>\n        <div className=\"blog-posts\">\n          {posts\n            .filter(post => post.node.frontmatter.title.length > 0)\n            .map(({ node: post }) => {\n              return (\n                <div className=\"blog-post-preview\" key={post.id}>\n                  <h3>\n                    <Link to={post.frontmatter.path}>{post.frontmatter.title}</Link>\n                  </h3>\n                  <p className=\"date\">{post.frontmatter.date}</p>\n                  <p>{post.excerpt}</p>\n                </div>\n              );\n            })}\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n          }\n        }\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header-module--container--rm58V\",\"heading\":\"header-module--heading--359Dj\"};","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport headerStyles from './css-modules/header.module.css'\n\nconst Header = ({ siteTitle }) => (\n  <header className={headerStyles.container}>\n    <h1 className={headerStyles.heading}>\n      <Link to=\"/\">\n        {siteTitle}\n      </Link>\n    </h1>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div className=\"layout-container\">\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <main>\n          {children}\n        </main>\n      </div>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}